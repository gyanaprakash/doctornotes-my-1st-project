//
//  PatientDetailViewController.m
//  doctornotes
//
//  Created by Mac on 19/12/13.
//  Copyright (c) 2013 nacreservices. All rights reserved.
//

#import "PatientDetailViewController.h"
#import "AppDelegate.h"
#import "DetailViewController.h"
#import "AppointmentViewController.h"
@interface PatientDetailViewController ()

@end

@implementation PatientDetailViewController
@synthesize patientTable,searchBar,recordeArray,filterdAray;
- (id)initWithNibName:(NSString *)nibNameOrNil bundle:(NSBundle *)nibBundleOrNil
{
    self = [super initWithNibName:nibNameOrNil bundle:nibBundleOrNil];
    if (self) {
        // Custom initialization
        [self.navigationItem setTitle:@"Visited Patients"];
        
    }
    return self;
}

- (void)viewDidLoad
{
    [super viewDidLoad];
	// Do any additional setup after loading the view.
    
    [self.navigationController.navigationBar setTintColor:[UIColor blackColor]];
    
    UIImageView*backview=[[UIImageView alloc]initWithFrame:CGRectMake(0, 0, 320, 460)];
    [backview setImage:[UIImage imageNamed:@""]];
    [self.view addSubview:backview];
    
  
    self.navigationItem.rightBarButtonItem = self.editButtonItem;

    
    
//    UIBarButtonItem *deleteButton = [[UIBarButtonItem alloc]initWithTitle:@"Delete" style:UIBarButtonSystemItemDone target:self action:@selector(onDeleteTouched:)];
//    
//     [self.navigationItem setRightBarButtonItem:deleteButton animated:YES];
    
    
    
    
    patientTable = [[[UITableView alloc]initWithFrame:CGRectMake(0, 0, 320, 415) style:UITableViewStylePlain]autorelease];
    [patientTable setDelegate:self];
    [patientTable setDataSource:self];
    [self.view addSubview:patientTable];
    

    searchBar=[[UISearchBar alloc]initWithFrame:CGRectMake(0, 0, 320, 45)];
    [searchBar setDelegate:self];
    [searchBar setAutocorrectionType:UITextAutocorrectionTypeNo];
    [searchBar setExclusiveTouch:YES];
    self.patientTable.tableHeaderView = searchBar;
    

    recordeArray = [[ NSMutableArray alloc]init];
    filterdAray = [[NSMutableArray alloc] init];
  
}

-(void)viewDidAppear:(BOOL)animated
{
    [super viewDidAppear:animated];
    
    isSearching=NO;
    letUserSelectRow=YES;
    searchBar.text=@"";
    [searchBar resignFirstResponder];
    [patientTable reloadData];

    AppDelegate*appobj=[[UIApplication sharedApplication]delegate];
   NSManagedObjectContext *context = [appobj managedObjectContext];
    
    
    NSFetchRequest *fetchRequest = [[NSFetchRequest alloc]initWithEntityName:@"PATIENT"];
    NSSortDescriptor *sortDescriptor = [[NSSortDescriptor alloc]
                                        initWithKey:@"firstname" ascending:YES];
    [fetchRequest setSortDescriptors:@[sortDescriptor]];
    
    self.recordeArray = [[context executeFetchRequest:fetchRequest error:nil]mutableCopy];
     [patientTable reloadData];
}



-(NSInteger)numberOfSectionsInTableView:(UITableView *)tableView{
    
    return 1;
}
-(NSInteger)tableView:(UITableView *)tableView numberOfRowsInSection:(NSInteger)section{
    if (isSearching)
		return [filterdAray count];
	else{
      return ([self.recordeArray count]);
    }
}

-(UITableViewCell*)tableView:(UITableView *)tableView cellForRowAtIndexPath:(NSIndexPath *)indexPath
{
    
    static NSString *cellIdentifier = @"cell";
    
UITableViewCell *cell = [[tableView dequeueReusableCellWithIdentifier:cellIdentifier]autorelease];
    
    if (cell==NULL)
       {
        
        cell = [[[UITableViewCell alloc]initWithStyle:UITableViewCellStyleSubtitle reuseIdentifier:cellIdentifier]autorelease];
           cell.accessoryType= UITableViewCellAccessoryDetailDisclosureButton;
           if(isSearching)
               cell.textLabel.text = [filterdAray objectAtIndex:indexPath.row];
           else
           {
        NSManagedObject *patientObject = [self.recordeArray objectAtIndex:indexPath.row];
        [cell.textLabel setText:[NSString stringWithFormat:@"%@",[patientObject valueForKey:@"firstname"]]];
        
        NSDateFormatter *dFM = [[NSDateFormatter alloc] init];
        [dFM setDateFormat:@"EEE-MMM-yyyy"];
        
        NSString *str = [dFM stringFromDate:[patientObject valueForKey:@"currentdate"]];
        [cell.detailTextLabel setText:str];
           }
    }
    return cell;
    
}
- (void)tableView:(UITableView *)tableView didSelectRowAtIndexPath:(NSIndexPath *)indexPath
{
    NSString *selectedItem = nil;
	if(isSearching)
		selectedItem = [filterdAray objectAtIndex:indexPath.row];
	else{
       
       selectedItem = [recordeArray objectAtIndex:indexPath.row];
    }
    [patientTable deselectRowAtIndexPath:[patientTable indexPathForSelectedRow] animated:YES];
    
    DetailViewController *detailView = [[DetailViewController alloc]initWithNibName:nil bundle:nil];
    
    detailView.fullDetailarray = [recordeArray objectAtIndex:indexPath.row];
    
        [self.navigationController pushViewController:detailView animated:YES];
    
}


- (NSIndexPath *)tableView :(UITableView *)theTableView willSelectRowAtIndexPath:(NSIndexPath *)indexPath {
	
	if(letUserSelectRow)
		return indexPath;
	else
		return nil;
}


- (void)tableView:(UITableView *)tableView commitEditingStyle:(UITableViewCellEditingStyle)editingStyle forRowAtIndexPath:(NSIndexPath *)indexPath
{
    if (editingStyle == UITableViewCellEditingStyleDelete)
    {
        
        
        [recordeArray removeObjectAtIndex:indexPath.row];
        
        // Request table view to reload
        [patientTable reloadData];
    }
        
//        [recordeArray removeObjectAtIndex:indexPath.row];
//        
//        [recordeArray deleteObject:[self.patientTable objectAtIndex:indexPath.row]];
//        
//         [patientTable deleteRowsAtIndexPaths:indexPath.row withRowAnimation:UITableViewRowAnimationFade];
    
}


#pragma -mark UISearchBar
-(void)searchBarTextDidBeginEditing:(UISearchBar *)theSearchBar{
	
	if(isSearching)
		return;
	isSearching = YES;
	letUserSelectRow = NO;
	self.patientTable.scrollEnabled = NO;
}
- (void)searchBar:(UISearchBar *)theSearchBar textDidChange:(NSString *)searchText {
	
	[filterdAray removeAllObjects];
	if([searchText length] > 0)
    {
		isSearching = YES;
		letUserSelectRow = YES;
		self.patientTable.scrollEnabled = YES;
		[self searchTableView];
	}
	else
    {
		isSearching = NO;
		letUserSelectRow = NO;
		self.patientTable.scrollEnabled = NO;
	}
	[self.patientTable reloadData];
}
-(void)searchBarSearchButtonClicked:(UISearchBar *)theSearchBar
{
    [searchBar resignFirstResponder];
	[self searchTableView];
}
-(void)searchtableView
{
    NSString *searchText = searchBar.text;
	NSMutableArray *searchArray = [[NSMutableArray alloc] init];
   
    [searchArray addObjectsFromArray:recordeArray];
    
	for (NSString *sTemp in searchArray)
	{
		NSRange titleResultsRange = [sTemp rangeOfString:searchText options:NSCaseInsensitiveSearch];
		if (titleResultsRange.length > 0)
			[filterdAray addObject:sTemp];
	}
	[searchArray release];
	searchArray = nil;
    
}
-(void)doneSearching_Clicked:(id)sender
{
	searchBar.text = @"";
	[searchBar resignFirstResponder];
	letUserSelectRow = YES;
	isSearching = NO;
	self.patientTable.scrollEnabled = YES;
	[self.patientTable reloadData];
}

-(void)Edit:(id)sender
{
    if(self.editing)
	{
		[super setEditing:NO animated:NO];
		[self.patientTable setEditing:NO animated:NO];
		[self.patientTable reloadData];
        
        
        [self.navigationItem.rightBarButtonItem setEnabled:TRUE];
	}
	 
}



-(void)viewWillAppear:(BOOL)animated
{
    [self.navigationController setNavigationBarHidden:NO];
}

- (void)didReceiveMemoryWarning
{
    [super didReceiveMemoryWarning];
    // Dispose of any resources that can be recreated.
}

@end
